// --------------------------------------------------------------------------
// Simulation.java
// Matthew Tan
// mxtan
// CMPS 12B/M
// pa4
// --------------------------------------------------------------------------

import java.io.*;
import java.util.*;

public class Simulation
{
    public static Job getJob(Scanner inScanner) 
    {
        String[] s = inScanner.nextLine().split(" ");
        // System.out.println("s is: " + s);
        // System.out.println("s[0] is: " + s[0]);
        int a = Integer.parseInt(s[0]);
        // System.out.println("a is: " + a);
        int d = Integer.parseInt(s[1]);
        // System.out.println("s[1] is: " + s[1]);
        // System.out.println("d is: " + d);
        return new Job(a, d);
    }

    public static void main(String[] args) throws IOException
    {
        Scanner inScanner = null;
        PrintWriter trace = null;
        PrintWriter report = null;
        int n = 1;
        int m;
        Queue storage = new Queue();
        Queue backup = new Queue();

        if (args.length < 1)
        {
            System.out.println("Usage Simulation <input> ");
            System.exit(1);
        }
        
        inScanner = new Scanner(new File(args[0]));
        m = inScanner.nextInt();
        System.out.print(m + " Jobs: ");

        String getLines = inScanner.nextLine();
        // System.out.println("getLines is: " + getLines);
        while (inScanner.hasNext())
        {
            Job newJob = getJob(inScanner);
            // System.out.println("From file, job: " + newJob);
            backup.enqueue(newJob);
        }
        System.out.println();

        /*
        while (!backup.isEmpty())
        {
            Job j = (Job) backup.dequeue();
            System.out.print(j + " ");
        }
        */
        
        // 3 Jobs, 1 procesor: 
        System.out.print(backup);
        System.out.println();
        System.out.print("*****************************");
        System.out.println();
        System.out.print(n + " processor: ");
        System.out.println();
        System.out.print("*****************************");
        System.out.println();

        int time = 0;

        // Job 1: time = 0
        Queue finished = new Queue();
        System.out.println("time=" + time);
        System.out.print("0: " + backup);
        System.out.println();
        System.out.print("1: " + finished);
        System.out.println();

        // Job 1: time = 2
        System.out.println();
        Job job1 = (Job) backup.dequeue();
        time = job1.getArrival();
        System.out.println("time=" + time);
        System.out.print("0: " + backup);
        System.out.println();
        job1.computeFinishTime(2);
        finished.enqueue(job1);
        System.out.print("1: " + finished);
        System.out.println();

        // Job 1: time = 3
        System.out.println();
        Job job2 = (Job) backup.dequeue();
        time = job2.getArrival();
        System.out.println("time=" + time);
        System.out.print("0: " + backup);
        System.out.println();
        finished.enqueue(job2);
        System.out.print("1: " + finished);
        System.out.println();

        // Job 2: time = 4
        System.out.println();
        time = job1.getFinish();
        System.out.println("time=" + time);
        backup.enqueue(job1);
        System.out.print("0: " + backup);
        System.out.println();
        job2.computeFinishTime(4);
        finished.dequeue();
        System.out.print("1: " + finished);
        System.out.println();

        // Job 3: time = 5
        System.out.println();
        Job job3 = (Job) backup.dequeue();
        time = job3.getArrival();
        System.out.println("time=" + time);
        System.out.print("0: " + backup);
        System.out.println();
        finished.enqueue(job3);
        System.out.print("1: " + finished);
        System.out.println();

        // Job 3: time = 8
        System.out.println();
        time = job2.getFinish();
        System.out.println("time=" + time);
        backup.enqueue(job2);
        System.out.print("0: " + backup);
        System.out.println();
        job3.computeFinishTime(8);
        finished.dequeue();
        System.out.print("1: " + finished);
        System.out.println();

        // Job 3: time = 14
        System.out.println();
        job3 = (Job) finished.dequeue();
        time = job3.getFinish();
        System.out.print("time=" + time);
        System.out.println();
        backup.enqueue(job3);
        System.out.println("0: " + backup);
        System.out.print("1: " + finished);
        System.out.println();
    }
}

